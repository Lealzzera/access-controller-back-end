// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Child {
  id            String                  @id @default(uuid())
  name          String
  cpf           String                  @unique
  grade         String?
  teacher       String?
  birthDate     DateTime?               @db.Date
  picture       String?
  period        Period
  createdAt     DateTime                @default(now())
  deletedAt     DateTime?
  responsible   ResponsibleOnChildren[]
  institution   Institution?            @relation(fields: [institutionId], references: [id])
  institutionId String

  @@map("children")
}

model Responsible {
  id           String                     @id @default(uuid())
  name         String
  email        String                     @unique
  cpf          String?                    @unique
  password     String
  street       String?
  neighborhood String?
  city         String?
  state        String?
  cep          String?
  picture      String?
  children     ResponsibleOnChildren[]
  deletedAt    DateTime?
  createdAt    DateTime                   @default(now())
  institutions ResponsibleOnInstitution[]
  role         Role                       @relation(fields: [roleId], references: [id])
  roleId       String

  @@map("responsible")
}

model ResponsibleOnChildren {
  childId       String
  responsibleId String
  kinship       Kinship
  notAllowed    Boolean?
  child         Child       @relation(fields: [childId], references: [id])
  responsible   Responsible @relation(fields: [responsibleId], references: [id])

  @@id([childId, responsibleId])
  @@map("responsibleOnChildren")
}

model Institution {
  id           String                     @id @default(uuid())
  cnpj         String?                    @unique
  name         String
  street       String?
  neighborhood String?
  city         String?
  state        String?
  cep          String?
  picture      String?
  email        String                     @unique
  responsible  String
  password     String
  children     Child[]
  createdAt    DateTime                   @default(now())
  deletedAt    DateTime?
  responsibles ResponsibleOnInstitution[]
  role         Role                       @relation(fields: [roleId], references: [id])
  roleId       String

  @@map("institutions")
}

model ResponsibleOnInstitution {
  institutionId String
  responsibleId String
  institution   Institution @relation(fields: [institutionId], references: [id])
  responsible   Responsible @relation(fields: [responsibleId], references: [id])

  @@id([institutionId, responsibleId])
  @@map("responsibleOnInstitution")
}

model Role {
  id           String        @id @default(uuid())
  role         RoleEnum      @unique
  responsibles Responsible[]
  institutions Institution[]

  @@map("role")
}

enum Period {
  MORNING
  AFTERNOON
  ALLDAY
}

enum RoleEnum {
  INSTITUTION
  RESPONSIBLE
}

enum Kinship {
  MOTHER
  FATHER
  UNCLE
  AUNT
  GRANDPARENT
  BROTHER
  SISTER
  STEPPARENT
  COUSIN
  GUARDIAN
  GODPARENT
  OTHER
}
